
var docArray = [];//just keeping track of docs globally


function fetch_documents(admin_num) {

 	docArray = []; //when fetching docs this way, there are duplicates. So we keep track in array...
	var url = "<%= ENV['DOCUMENTUM_PROD_URL'] %>" + ".json";

	//$("#document_library").css("display","block"); //show product header  
  	$("#document_library").append("<div class='loading'>Loading Document Library...</div>");

	//var dql_string_1 = "select r_object_id,object_name,title,r_creator_name,r_object_type from opp_study WHERE r_object_type='opp_study' and ANY mrid in ('" + mrid_value + "')";

	//need to refactor this code - there must be a more efficient way to pull all OPP document types, but currently
	//having trouble getting it working. Documentum 7.3 should have better non-DQL REST search ability. 

	var type_array = ["opp_doc","opp_assessment","opp_correspondence","opp_csf","opp_endspec","opp_form","opp_label","opp_miscellaneous","opp_regulatory","opp_study"]//all types of docs to searcy for in documentum

	//hack for now - until we can write better DQL query, or use new version of Documentum Restful API which has proper search, we iterate over doc types
	$.each( type_array, function( index, doc_type ) {

		var dql_string = "select *,admin_num from " + doc_type + " WHERE ANY admin_num LIKE '" + admin_num + "%'";

		$.ajax({
		  type: "post",
		  url: url,
		  	  data: { dql: dql_string},
	      crossDomain: true,
	      xhrFields: {
	      	withCredentials: true
	      },
	      beforeSend: function(xhr) {


	      }
	      ,	      
	      success: function (data, status, jqXHR){
			$("#document_library .loading").remove();
			$("#document_library .row").css("display","block");

	    	loadTiles(data,doc_type);

	    	}

		});

	});

};
	

  
function loadTiles(data,doc_type) {

	//$("#document_library").css("display","inline-block");//show library div

	$.each( data.entries, function( index, value ) {
		if(docArray.indexOf(value.content.properties["r_object_id"]) == -1){//new document, add it to global array
			docArray.push(value.content.properties["r_object_id"]);					
		}
		else{

			return;//this doc is being returned for second time, skip it		
		};


  		//console.log("loadTiles: " + doc_type + "," + value.content.properties["r_object_id"] + "," + value.content.properties["r_object_id"] );

		var ul = document.getElementById("document_list");
	    var li = document.createElement("li");
	    $(li).addClass("doc_list_item");

	    var div = $("<div class='doc_rec_date'>" + oracleDate(value.content.properties["r_creation_date"]) + ": <div class='doc_type'>" + value.content.properties["r_object_type"] +"</div></div>");
	   	$(li).append(div);	   	

		//div = $("<div class='doc_type'>" + value.content.properties["r_object_type"] + "</div>");
	   	//$(li).append(div);

	    div = $("<div class='doc_name'>" + value.content.properties["object_name"] + "</div>");
	   	$(li).append(div);

	    


	    //div = $("<div class='minor_text'>Object ID:" + value.content.properties["r_object_id"] + "</div>");
	   	//$(li).append(div);	   	

	    div = $("<a id='down_" + value.content.properties["r_object_id"] + "' class='btn btn-default download' target='_blank'>Preview</a>");
	    $(div).click(function(){ 
	    	$(".download").parent().removeClass("doc_selected");
	    	$(this).parent().addClass("doc_selected");
	    });
	   	$(li).append(div);	   	


	   	$(li).hide();
		$(li).toggle("highlight");

	    //var children = ul.children.length + 1
	    li.setAttribute("id", "item_" + value.content.properties["r_object_id"]);

 	    ul.appendChild(li);

 	    //get File Content Link
 	    //console.log('fetchDocumentContent for: ' + value.content.properties["r_object_id"]);
 	    fetchDocumentContent(value.content.properties["r_object_id"]);

	}); 	
};


function fetchDocumentContent(object_id) {


	var url = "<%= ENV['DOCUMENTUM_PROD_URL'] %>" + "/objects/" + object_id + "/contents/content.json"

	$.ajax({
	  type: "get",
	  url: url,
      crossDomain: true,
      xhrFields: {
      	withCredentials: true
      },
      success: function (data){
    	
    	//check for and retrieve object with rel='enclosure'
    	var enclosure = $.grep( data.links, function( n, i ) {
  			return n.rel == "enclosure";
		});
    	var docUrl = enclosure[0].href;

    	//console.log("#down_" + data.properties.r_object_id + ",link: " + enclosure[0].href);

    	$("#down_" + data.properties.parent_id[0]).attr("onclick","javascript: previewDoc('" + enclosure[0].href + "')");
      }

	});//end of .ajax

};

function previewDoc(docUrl){

	$("#previewPane").attr("src",docUrl);


}